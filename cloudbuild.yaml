steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'europe-west4-docker.pkg.dev/driven-stage-457910-k8/my-docker-repo/my-node-server-simplified:latest', '.']
    
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'europe-west4-docker.pkg.dev/driven-stage-457910-k8/my-docker-repo/my-node-server-simplified:latest']

  # Get credentials and copy kubeconfig to workspace
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'get-credentials'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        mkdir -p /workspace/kubeconfig
        gcloud container clusters get-credentials my-cluster --zone europe-west4-a --project driven-stage-457910-k8
        cp ~/.kube/config /workspace/kubeconfig/config
        echo "Kubeconfig copied to /workspace/kubeconfig/config"

  # Verify kubeconfig
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Verifying kubeconfig..."
        kubectl config view --kubeconfig=/workspace/kubeconfig/config
        kubectl config get-contexts --kubeconfig=/workspace/kubeconfig/config

  # Set the image using kubectl with explicit kubeconfig path
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - '--kubeconfig=/workspace/kubeconfig/config'
      - 'set'
      - 'image'
      - 'deployment/my-node-app'
      - 'my-node-container=europe-west4-docker.pkg.dev/driven-stage-457910-k8/my-docker-repo/my-node-server-simplified:latest'

  # Trigger a rollout restart with explicit kubeconfig path
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - '--kubeconfig=/workspace/kubeconfig/config'
      - 'rollout'
      - 'restart'
      - 'deployment/my-node-app'

images:
  - 'europe-west4-docker.pkg.dev/driven-stage-457910-k8/my-docker-repo/my-node-server-simplified:latest'

logsBucket: gs://driven-stage-457910-k8-logs/
